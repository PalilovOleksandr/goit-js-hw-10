{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('input#datetime-picker');\nconst btn = document.querySelector('button[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\nbtn.addEventListener('click', timerHandler);\nlet userSelectedDate;\nlet intervalId;\nbtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      btn.disabled = true;\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        backgroundColor: '#ef4040',\n        position: 'topRight',\n        messageColor: '#ffffff',\n      });\n      return;\n    } else {\n      btn.disabled = false;\n    }\n  },\n};\n\nfunction timerHandler() {\n  btn.disabled = true;\n  input.disabled = true;\n  intervalId = setInterval(() => {\n    const timeData = userSelectedDate - new Date();\n    if (timeData <= 0) {\n      clearInterval(intervalId);\n      input.disabled = false;\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(timeData);\n\n    daysValue.textContent = days;\n    hoursValue.textContent = addLeadingZero(hours);\n    minutesValue.textContent = addLeadingZero(minutes);\n    secondsValue.textContent = addLeadingZero(seconds);\n  }, 1000);\n}\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nflatpickr(input, options);\n"],"names":["input","btn","daysValue","hoursValue","minutesValue","secondsValue","timerHandler","userSelectedDate","intervalId","options","selectedDates","iziToast","timeData","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value","flatpickr"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,uBAAuB,EACtDC,EAAM,SAAS,cAAc,oBAAoB,EACjDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAC5DJ,EAAI,iBAAiB,QAASK,CAAY,EAC1C,IAAIC,EACAC,EACJP,EAAI,SAAW,GAEf,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,GADAH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,KAAQ,CAClCN,EAAI,SAAW,GACfU,EAAS,MAAM,CACb,QAAS,qCACT,gBAAiB,UACjB,SAAU,WACV,aAAc,SACtB,CAAO,EACD,MACN,MACMV,EAAI,SAAW,EAElB,CACH,EAEA,SAASK,GAAe,CACtBL,EAAI,SAAW,GACfD,EAAM,SAAW,GACjBQ,EAAa,YAAY,IAAM,CAC7B,MAAMI,EAAWL,EAAmB,IAAI,KACxC,GAAIK,GAAY,EAAG,CACjB,cAAcJ,CAAU,EACxBR,EAAM,SAAW,GACjB,MACD,CACD,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE5DV,EAAU,YAAcW,EACxBV,EAAW,YAAce,EAAeJ,CAAK,EAC7CV,EAAa,YAAcc,EAAeH,CAAO,EACjDV,EAAa,YAAca,EAAeF,CAAO,CAClD,EAAE,GAAI,CACT,CACA,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAC,EAAUrB,EAAOS,CAAO"}